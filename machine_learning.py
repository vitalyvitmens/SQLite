# TODO: Machine Learning (Машинное обучение)
#  Узнайте, как создавать интеллектуальные системы рекомендаций,
#  которые помогают нам в повседневной жизни.
#  Добро пожаловать в машинное обучение.

# TODO: Welcome to Machine Learning (Добро пожаловать в машинное обучение)
#  Поздравляем! Вы сделали большой шаг к тому, чтобы стать практиком машинного обучения!
#  В дополнение к прохождению этого курса не забудьте воспользоваться всей поддержкой обучения,
#  доступной вам на SoloLearn, включая ежедневные советы, практики «Попробуйте сами», задачи тренера по коду,
#  игровую площадку для кода и участие в нашем замечательном сообществе учащихся. Мы рады услышать от вас,
#  поэтому, пожалуйста, оставляйте комментарии и отзывы, когда вы учитесь с нами.
#  Python — это язык программирования, который мы будем использовать на протяжении всего курса.
#  Давайте начнем!

# TODO: Machine Learning Overview (Обзор машинного обучения)
#  Добро пожаловать на курс машинного обучения! Машинное обучение — это способ сбора данных и превращения их в идеи.
#  Мы используем мощность компьютера для анализа примеров из прошлого, чтобы построить модель,
#  которая может предсказать результат для новых примеров. Мы сталкиваемся с моделями машинного обучения каждый день.
#  Например, когда Netflix рекомендует вам шоу, они использовали модель, основанную на том,
#  что вы и другие пользователи смотрели, чтобы предсказать, что вы хотели бы.
#  Когда Amazon выбирает цену для товара, они используют модель,
#  основанную на том, как подобные товары продавались в прошлом.
#  Когда компания, выпустившая вашу кредитную карту, звонит вам из-за подозрительной активности,
#  она использует модель, основанную на вашей прошлой активности, для распознавания аномального поведения.
#  В этом курсе мы изучим несколько методов решения задач машинного обучения.
#  Машинное обучение можно использовать для создания чат-бота, обнаружения спама или распознавания изображений.

# TODO: Course Basics (Основы курса)
#  Одним из наиболее распространенных языков, используемых профессионалами в области машинного обучения, является Python
#  Это очень доступно и очень мощно, поэтому мы будем использовать его в этом курсе.
#  Мы предполагаем рабочее знание Python. В этом курсе мы будем использовать несколько пакетов Python,
#  которые помогут решить задачи машинного обучения. Мы будем использовать pandas, numpy, matplotlib и scikit-learn.
#  Pandas используется для чтения данных и обработки данных, numpy используется для вычисления числовых данных,
#  matplotlib используется для построения графиков данных, а scikit-learn используется для моделей машинного обучения.
#  Каждый из этих пакетов довольно обширен, но мы рассмотрим функции, которые будем использовать.
#  Мы также рассмотрим некоторые основные статистические данные, поскольку они являются основой машинного обучения.
#  Курс будет охватывать как теорию, так и практику методов машинного обучения, но сосредоточится на том,
#  как их использовать на реальных примерах.

# TODO: What's in this Course? (Что в этом курсе?)
#  В машинном обучении мы говорим о контролируемом и неконтролируемом обучении.
#  Обучение с учителем — это когда у нас есть известная цель на основе прошлых данных
#  (например, прогнозирование цены, по которой будет продаваться дом),
#  а обучение без учителя — это когда нет известного прошлого ответа
#  (например, определение тем, обсуждаемых в обзорах ресторанов).
#  В этом курсе мы сосредоточимся на контролируемом обучении.
#  В контролируемом обучении существуют проблемы классификации и регрессии.
#  Регрессия прогнозирует числовое значение (например, прогнозирует, по какой цене будет продаваться дом)
#  и классифицирует предсказывает, к какому классу что-либо принадлежит
#  (например, предсказывает, не выполнит ли заемщик дефолт по своему кредиту).
#  Мы сосредоточимся на проблемах классификации.
#  Это задачи, в которых мы предсказываем, к какому классу что-то принадлежит.
#  Наши примеры будут включать:
#  • Прогнозирование того, кто выживет при крушении «Титаника»
#  • Определение рукописной цифры по изображению
#  • Использование данных биопсии для определения злокачественности новообразования
#  Мы будем использовать ряд популярных методов для решения этих проблем.
#  Мы рассмотрим каждый из них более подробно в следующих модулях:
#  • Логистическая регрессия
#  • Деревья решений
#  • Случайные леса
#  • Нейронные сети
#  В конце этого курса вы сможете взять классификационный набор данных
#  и использовать Python для создания нескольких различных моделей,
#  чтобы определить лучшую модель для данной проблемы.
#  Машинное обучение можно использовать для решения широкого круга задач.
#  Этот курс будет посвящен контролируемому обучению и классификации.

# TODO: Averages (Средние значения)
#  При работе с данными нам часто нужно вычислить некоторые простые статистические данные.
#  Допустим, у нас есть список возрастов людей в классе.
#  Мы располагаем их в порядке возрастания, так будет проще производить расчеты.
#      15, 16, 18, 19, 22, 24, 29, 30, 34
# TODO: Среднее значение является наиболее известным средним значением.
#  Сложите все значения и разделите на количество значений:
#      (15 + 16 + 18 + 19 + 22 + 24 + 29 + 30 + 34) / 9 =  207/9 = 23
# TODO: Медиана — это значение посередине упорядоченных чисел.
#  В этом случае, поскольку имеется 9 значений, среднее значение 5-тое, то есть 22.
#  В статистике как среднее, так и медиана называются средними.
#  Среднее значение для непрофессионала является средним.

# TODO: Percentiles (процентили)
#  Медиану также можно рассматривать как 50-й процентиль.
#  Это означает, что 50% данных меньше медианы, а 50% данных больше медианы.
#  Это говорит нам, где находится середина данных, но нам часто требуется больше понимания распределения данных.
#  Мы часто будем рассматривать 25 -й процентиль и 75 -й процентиль.
#  25 - й процентиль — это значение, которое составляет одну четверть пути через данные.
#  Это значение, при котором 25% данных меньше его (а 75% данных больше его).
#  Точно так же 75 -й процентиль составляет три четверти пути через данные.
#  Это значение, при котором 75% данных меньше его (а 25% данных больше его).
#  Если мы снова посмотрим на наш возраст:
#      15, 16, 18, 19, 22, 24, 29, 30, 34
# TODO: У нас есть 9 значений, поэтому 25% данных будут составлять примерно 2 точки данных.
#  Таким образом, третья точка данных превышает 25% данных. Таким образом, 25-й процентиль равен 18 (3-я точка данных).
#  Точно так же 75% данных составляют примерно 6 точек данных. Таким образом, 7-я точка данных превышает 75% данных.
#  Таким образом, 75-й процентиль равен 29 (7-я точка данных).
#  Полный диапазон наших данных находится в диапазоне от 15 до 34.
#  25-й и 75-й процентили говорят нам, что половина наших данных находится в диапазоне от 18 до 29.
#  Это помогает нам понять, как распределяются данные.
#  Если имеется четное количество точек данных, чтобы найти медиану (или 50-й процентиль),
#  вы берете среднее значение двух значений в середине.

# TODO: Standard Deviation & Variance (Стандартное отклонение и дисперсия)
#  Мы можем получить более глубокое понимание распределения наших данных со стандартным отклонением и дисперсией.
#  Стандартное отклонение и дисперсия — это меры того, насколько разбросаны или рассредоточены данные.
#  Мы измеряем, насколько далеко каждая точка данных от среднего.
#  Давайте еще раз посмотрим на нашу возрастную группу:
#      15, 16, 18, 19, 22, 24, 29, 30, 34
# TODO: Напомним, что среднее равно 23. Давайте подсчитаем, насколько далеко каждое значение от среднего.
#  15 на 8 отличается от среднего (поскольку 23-15=8).
#  Вот список всех этих расстояний:
#      8, 7, 5, 4, 1, 1, 6, 7, 11
# TODO: Мы возводим эти значения в квадрат и складываем их вместе.
#  См. Рис: StandardDeviationPicture1.png
#  Мы делим это значение на общее количество значений, и это дает нам дисперсию.
#      362 / 9 = 40.22
# TODO: Чтобы получить стандартное отклонение, мы просто возьмем квадратный корень из этого числа и получим: 6.34
#  Если наши данные нормально распределены, как показано на графике ниже (См. Рис: StandardDeviationPicture2.png),
#  68% населения находится в пределах одного стандартного отклонения от среднего.
#  На графике мы выделили область в пределах одного стандартного отклонения от среднего значения.
#  Вы можете видеть, что заштрихованная область составляет около двух третей (точнее 68%) от общей площади под кривой.
#  Если мы предположим, что наши данные нормально распределены, мы можем сказать,
#  что 68% данных находятся в пределах 1 стандартного отклонения от среднего.
# TODO: В нашем примере с возрастом, хотя возрасты, вероятно, не совсем нормально распределены,
#  мы предполагаем, что это так, и говорим, что примерно 68% населения имеет возраст
#  в пределах одного стандартного отклонения от среднего. Поскольку среднее значение равно 23 годам,
#  а стандартное отклонение равно 6,34, мы можем сказать, что приблизительно 68% возрастов нашей популяции находятся
#  в диапазоне от 16,66 (23 минус 6,34) до 29,34 (23 плюс 6,34).
#  Несмотря на то, что данные никогда не бывают идеальным нормальным распределением,
#  мы все же можем использовать стандартное отклонение, чтобы получить представление о том, как распределяются данные.

# TODO: Statistics with Python (Статистика с Python)
#  Мы можем рассчитать все эти операции с помощью Python. Мы будем использовать пакет Python numpy.
#  Мы будем использовать numpy позже для работы с массивами, а сейчас мы просто будем использовать несколько функций
#  для статистических вычислений: mean, median, centile, std, var.
#  Сначала мы импортируем пакет. Стандартной практикой является псевдоним numpy как np.
#      import numpy as np
# TODO: Давайте инициализируем переменную data, чтобы иметь список возрастов.
#      data = [15, 16, 18, 19, 22, 24, 29, 30, 34]
# TODO: Теперь мы можем использовать функции numpy.
#  Для функций среднего, медианы, стандартного отклонения и дисперсии мы просто передаем список данных.
#  Для функции процентиля мы передаем список данных и процентиль (в виде числа от 0 до 100).
# import numpy as np
#
# data = [15, 16, 18, 19, 22, 24, 29, 30, 34]
#
# print("mean:", np.mean(data))
# print("median:", np.median(data))
# print("50th percentile (median):", np.percentile(data, 50))
# print("25th percentile:", np.percentile(data, 25))
# print("75th percentile:", np.percentile(data, 75))
# print("standard deviation:", np.std(data).round(2))
# print("variance:", np.var(data).round(2))
# TODO: Numpy — это библиотека Python, которая позволяет быстро и легко выполнять математические операции с массивами.

# TODO: What is Pandas? (Что такое Панды?)
#  Этот курс написан на Python, одном из наиболее часто используемых языков для машинного обучения.
#  Одна из причин, по которой он так популярен, заключается в том,
#  что существует множество полезных модулей Python для работы с данными.
#  Первый, который мы представим, называется Pandas.
#  Pandas — это модуль Python, который помогает нам читать данные и управлять ими.
#  Что хорошо в pandas, так это то, что вы можете брать данные и просматривать их в виде таблицы,
#  удобочитаемой для человека, но их также можно интерпретировать в числовом виде,
#  чтобы вы могли выполнять с ними множество вычислений. Мы называем таблицу данных DataFrame .
#  Python удовлетворит все наши потребности в машинном обучении.
#  Мы будем использовать модуль Pandas для обработки данных.

# TODO: Read in Your Data (Читать в ваших данных)
#  Нам нужно начать с импорта Pandas. Стандартной практикой является прозвище pd, чтобы потом быстрее печатать.
#      import pandas as pd
# TODO: Мы будем работать с набором данных пассажиров Титаника.
#  Для каждого пассажира у нас будут данные о нем, а также о том, выжили ли они в кораблекрушении.
#  Наши данные хранятся в виде файла CSV (значения, разделенные запятыми). Файл titanic.csv находится ниже.
#  Первая строка — это заголовок, а затем каждая последующая строка — это данные для одного пассажира.
#      Survived, Pclass, Sex, Age, Siblings/Spouses, Parents/Children, Fare
#      Выжившие, ПКласс, Пол, Возраст, Братья и сестры/супруги, Родители/Дети, Плата за проезд
#      0, 3, male, 22.0, 1, 0, 7.25
#      1, 1, female, 38.0, 1, 0, 71.2833
#      1, 3, female, 26.0, 0, 0, 7.925
#      1, 1, female, 35.0, 1, 0, 53.1
# TODO: Мы собираемся загружать данные в pandas, чтобы мы могли просматривать их как DataFrame.
#  Функция read_csv берет файл в формате csv и преобразует его в Pandas DataFrame.
#      df = pd.read_csv('titanic.csv')
# TODO: Объект df теперь является нашим фреймом данных pandas с набором данных Titanic.
#  Теперь мы можем использовать метод head для просмотра данных.
#  Метод head возвращает первые 5 строк DataFrame.
#      print(df.head())
# import pandas as pd
#
# df = pd.read_csv('https://sololearn.com/uploads/files/titanic.csv')
# print(df.head())
# TODO: Обычно данные хранятся в файлах CSV (значения, разделенные запятыми),
#  которые мы можем легко прочитать с помощью функции panda read_csv.
#  Метод head возвращает первые 5 строк.

# TODO: Summarize the Data (Суммарные данные)
#  Обычно наши данные слишком велики, чтобы мы могли отобразить их все.
#  Рассмотрение первых нескольких строк — это первый шаг к пониманию наших данных,
#  но затем мы хотим взглянуть на некоторую сводную статистику.
#  В пандах мы можем использовать метод описания describe().
#  Он возвращает таблицу статистики о столбцах.
#      print(df.describe())
# TODO: Мы добавляем строку в приведенный ниже код, чтобы заставить Python отображать все 6 столбцов.
#  Без линии это будет сокращать результаты.
# import pandas as pd
#
# pd.options.display.max_columns = 6
# df = pd.read_csv('https://sololearn.com/uploads/files/titanic.csv')
# print(df.describe())
# TODO: Для каждого столбца мы видим несколько статистических данных.
#  Обратите внимание, что он дает статистику только для числовых столбцов.
#  Давайте рассмотрим, что означает каждая из этих статистических данных:
#  Count - это количество строк, которые имеют значение.
#  В нашем случае у каждого пассажира есть значение для каждого из столбцов,
#  поэтому значение равно 887 (общее количество пассажиров).
#  Среднее значение: Напомним, что среднее значение является стандартным средним значением.
#  Std : это сокращение от стандартного отклонения. Это мера того, насколько разбросаны данные.
#  Min : наименьшее значение
#  25% : 25-й процентиль
#  50% : 50-й процентиль, также известный как медиана.
#  75% : 75-й процентиль
#  Макс : наибольшее значение
#  Мы используем метод описания Pandas, чтобы начать интуитивно понимать наши данные.
